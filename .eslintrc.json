{
    "root": true,
    "parser": "@typescript-eslint/parser",
    "plugins": ["@typescript-eslint", "prettier"],
    "extends": [
        // By extending from a plugin config, we can get recommended rules without having to add them manually.
        "eslint:recommended",
        "plugin:react/recommended",
        "plugin:import/recommended",
        "plugin:jsx-a11y/recommended",
        "plugin:@typescript-eslint/recommended",
        "eslint-config-prettier"
        // This disables the formatting rules in ESLint that Prettier is going to be responsible for handling.
        // Make sure it's always the last config, so it gets the chance to override other configs.
    ],
    "settings": {
        "react": {
            // Tells eslint-plugin-react to automatically detect the version of React to use.
            "version": "detect"
        },
        // Tells eslint how to resolve imports
        "import/resolver": {
            "node": {
                "paths": ["src"],
                "extensions": [".js", ".jsx", ".ts", ".tsx"]
            }
        }
    },
    "rules": {
        // Add your own rules here to override ones from the extended configs.
        "prettier/prettier": 2,
        "import/no-unresolved": [2, { "ignore": ["@mantine", "\\.svg\\?react"] }]
//        "no-restricted-imports": "off",
//        "@typescript-eslint/no-restricted-imports": [
//            "warn",
//            {
//                "name": "react-redux",
//                "importNames": ["useSelector", "useDispatch"],
//                "message": "Use typed hooks `useAppDispatch` and `useAppSelector` instead."
//            }
//        ]
    }
}
